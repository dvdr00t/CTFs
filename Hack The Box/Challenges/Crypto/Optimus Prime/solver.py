N = 461835717689595751556702679241835583845826346117429620329863471207207638474903020234396429489610339651381868271153084471450744378804928188522542721443384366556337284132942385588798201014515020625413358429950894858802797110617248023819848832547961707244270454041158310979546994863841088897709222193179276376392784271433933236042193303864882466198015663501813024257153014624780921565537743606318929192481041685419431342100489986290570405504769595615757811124227421202511290010664132862828650668119062436591108660259422167344731419998988339196886195506531909803160461559001689580297031317811433011425070514263266088871151919122616394730249980143416624226187329550339681334068553495086717426208987130836888776173340372919274723827650852875029410057872010653816257819250651057002491503935528016525360053472328867992898114405530225061064082751591170378292308678559056697629762393796059268297752503589496508274452591032719160366638369881384438829130034226610503666723397602865323912931870321788517878212860253987053778107149310631190116548388849076318383873824952644145463103940044260712229081062214315885463381462708577043465078584613186203147399778021580963541540139452816185594673542432493532139502062685512737382193047606469009059847087
C = 21814161995296647751738932050250491815171663530185945331444270711048310597497548337725083355652051645204074022890842752385611531478422994810125791225955396203905343813544361629373129991079236307048225932030810793061652903018806802282306186644012186693699004505339051225299222053353346981289206560122020639791413588052645131851161478509771661804811104105851377519818433586004021172384872520034562938210177587807121077127771796996404486397335934310449674803698305735941025139382149350313079140811118112760632224899324017776753026167284750022052680209879966846276347979566485333000836903839420336684230932687798166350299230872881686722165268558306029080651297102480423911613008001938293929184334137157229198531997819905034552169872208548917235198764106163665317773829457773605230201589651048329401328027327792827490223451378769216430437137728510359248140134038555663597459886079666926077629181514791360096613378168796913869185582302709287629165348425985894278611667727460225496244274648079681980337863920636758381615588089024201679832296454617675232527109192345222888248363550898404768571482441185472111404933477820041589427375119174710640570851105497164308589613143784220960383109750201695773968536476811932317281214551746125417725039

def iroot(k, n):
    u, s = n, n+1
    while u < s:
        s = u
        t = (k-1) * s + n // pow(s, k-1)
        u = t // k
    return s

for i in range(2, 17):
    x = iroot(i, C)
    m = int.to_bytes(x, 1024, 'big').replace(b'\x00', b'')
    print(m)